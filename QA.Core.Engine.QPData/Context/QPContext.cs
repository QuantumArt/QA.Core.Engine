#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QA.Core.Engine.QPData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class QPContext : System.Data.Linq.DataContext
	{
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStatusType(StatusType instance);
    partial void UpdateStatusType(StatusType instance);
    partial void DeleteStatusType(StatusType instance);
    partial void InsertQPAbstractItem(QPAbstractItem instance);
    partial void UpdateQPAbstractItem(QPAbstractItem instance);
    partial void DeleteQPAbstractItem(QPAbstractItem instance);
    partial void InsertQPDiscriminator(QPDiscriminator instance);
    partial void UpdateQPDiscriminator(QPDiscriminator instance);
    partial void DeleteQPDiscriminator(QPDiscriminator instance);
    partial void InsertQPCulture(QPCulture instance);
    partial void UpdateQPCulture(QPCulture instance);
    partial void DeleteQPCulture(QPCulture instance);
    partial void InsertItemTitleFormat(ItemTitleFormat instance);
    partial void UpdateItemTitleFormat(ItemTitleFormat instance);
    partial void DeleteItemTitleFormat(ItemTitleFormat instance);
    partial void InsertQPRegion(QPRegion instance);
    partial void UpdateQPRegion(QPRegion instance);
    partial void DeleteQPRegion(QPRegion instance);
    partial void InsertTrailedAbstractItem(TrailedAbstractItem instance);
    partial void UpdateTrailedAbstractItem(TrailedAbstractItem instance);
    partial void DeleteTrailedAbstractItem(TrailedAbstractItem instance);
    partial void InsertQPObsoleteUrl(QPObsoleteUrl instance);
    partial void UpdateQPObsoleteUrl(QPObsoleteUrl instance);
    partial void DeleteQPObsoleteUrl(QPObsoleteUrl instance);
    partial void InsertQPItemDefinitionConstraint(QPItemDefinitionConstraint instance);
    partial void UpdateQPItemDefinitionConstraint(QPItemDefinitionConstraint instance);
    partial void DeleteQPItemDefinitionConstraint(QPItemDefinitionConstraint instance);
    partial void InsertAbstractItemAbtractItemRegionArticle(AbstractItemAbtractItemRegionArticle instance);
    partial void UpdateAbstractItemAbtractItemRegionArticle(AbstractItemAbtractItemRegionArticle instance);
    partial void DeleteAbstractItemAbtractItemRegionArticle(AbstractItemAbtractItemRegionArticle instance);
    partial void InsertItemDefinitionItemDefinitionArticle(ItemDefinitionItemDefinitionArticle instance);
    partial void UpdateItemDefinitionItemDefinitionArticle(ItemDefinitionItemDefinitionArticle instance);
    partial void DeleteItemDefinitionItemDefinitionArticle(ItemDefinitionItemDefinitionArticle instance);
    #endregion
		
		public QPContext(System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["qp_database"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QPContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QPContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<StatusType> StatusTypes
		{
			get
			{
				return this.GetTable<StatusType>();
			}
		}
		
		public System.Data.Linq.Table<QPAbstractItem> QPAbstractItems
		{
			get
			{
				return this.GetTable<QPAbstractItem>();
			}
		}
		
		public System.Data.Linq.Table<QPDiscriminator> QPDiscriminators
		{
			get
			{
				return this.GetTable<QPDiscriminator>();
			}
		}
		
		public System.Data.Linq.Table<QPCulture> QPCultures
		{
			get
			{
				return this.GetTable<QPCulture>();
			}
		}
		
		public System.Data.Linq.Table<ItemTitleFormat> ItemTitleFormats
		{
			get
			{
				return this.GetTable<ItemTitleFormat>();
			}
		}
		
		public System.Data.Linq.Table<QPRegion> QPRegions
		{
			get
			{
				return this.GetTable<QPRegion>();
			}
		}
		
		public System.Data.Linq.Table<TrailedAbstractItem> TrailedAbstractItems
		{
			get
			{
				return this.GetTable<TrailedAbstractItem>();
			}
		}
		
		public System.Data.Linq.Table<QPObsoleteUrl> QPObsoleteUrls
		{
			get
			{
				return this.GetTable<QPObsoleteUrl>();
			}
		}
		
		public System.Data.Linq.Table<QPItemDefinitionConstraint> QPItemDefinitionConstraints
		{
			get
			{
				return this.GetTable<QPItemDefinitionConstraint>();
			}
		}
		
		public System.Data.Linq.Table<AbstractItemAbtractItemRegionArticle> AbstractItemAbtractItemRegionArticles
		{
			get
			{
				return this.GetTable<AbstractItemAbtractItemRegionArticle>();
			}
		}
		
		public System.Data.Linq.Table<ItemDefinitionItemDefinitionArticle> ItemDefinitionItemDefinitionArticles
		{
			get
			{
				return this.GetTable<ItemDefinitionItemDefinitionArticle>();
			}
		}
		
		public System.Nullable<int> AbsTime(System.Nullable<System.DateTime> time)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), time).ReturnValue));
		}
	}
	
	public partial class StatusType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SiteId;
		
		private int _Id;
		
		private string _Name;
		
		private int _Weight;
		
		private string _Description;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _LastModifiedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIdChanging(int value);
    partial void OnSiteIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWeightChanging(int value);
    partial void OnWeightChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    #endregion
		
		public StatusType()
		{
			OnCreated();
		}
		
		public int SiteId
		{
			get
			{
				return this._SiteId;
			}
			set
			{
				if ((this._SiteId != value))
				{
					this.OnSiteIdChanging(value);
					this.SendPropertyChanging();
					this._SiteId = value;
					this.SendPropertyChanged("SiteId");
					this.OnSiteIdChanged();
				}
			}
		}
		
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public int Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class QPAbstractItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StatusTypeId;
		
		private bool _Visible;
		
		private bool _Archive;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _LastModifiedBy;
		
		private string _Title;
		
		private string _Name;
		
		private System.Nullable<int> _Parent;
		
		private System.Nullable<bool> _IsVisible;
		
		private System.Nullable<bool> _IsPage;
		
		private string _ZoneName;
		
		private string _AllowedUrlPatterns;
		
		private string _DeniedUrlPatterns;
		
		private string _Description;
		
		private System.Nullable<int> _Discriminator;
		
		private System.Nullable<int> _ContentId;
		
		private System.Nullable<int> _VersionOf;
		
		private System.Nullable<int> _Culture;
		
		private System.Nullable<int> _TitleFormat;
		
		private string _Keywords;
		
		private string _MetaDescription;
		
		private string _Tags;
		
		private System.Nullable<bool> _IsInSiteMap;
		
		private System.Nullable<int> _IndexOrder;
		
		private System.Nullable<int> _ExtensionId;
		
		private string _AuthenticationTargeting;

		private string _Targeting;

		private EntityRef<QPAbstractItem> _Parent1;
		
		private EntityRef<QPDiscriminator> _Discriminator1;
		
		private EntityRef<QPAbstractItem> _VersionOf1;
		
		private EntityRef<QPCulture> _Culture1;
		
		private EntityRef<ItemTitleFormat> _TitleFormat1;
		
		private EntitySet<AbstractItemAbtractItemRegionArticle> _AbstractItemAbtractItemRegionArticles;
		
		private EntitySet<QPAbstractItem> _Children;
		
		private EntitySet<QPAbstractItem> _Versions;
		
		private EntitySet<QPObsoleteUrl> _ObsoleteUrls;
		
		private EntityRef<StatusType> _StatusType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusTypeIdChanging(int value);
    partial void OnStatusTypeIdChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnArchiveChanging(bool value);
    partial void OnArchiveChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParent_IDChanging(System.Nullable<int> value);
    partial void OnParent_IDChanged();
    partial void OnIsVisibleChanging(System.Nullable<bool> value);
    partial void OnIsVisibleChanged();
    partial void OnIsPageChanging(System.Nullable<bool> value);
    partial void OnIsPageChanged();
    partial void OnZoneNameChanging(string value);
    partial void OnZoneNameChanged();
    partial void OnAllowedUrlPatternsChanging(string value);
    partial void OnAllowedUrlPatternsChanged();
    partial void OnDeniedUrlPatternsChanging(string value);
    partial void OnDeniedUrlPatternsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDiscriminator_IDChanging(System.Nullable<int> value);
    partial void OnDiscriminator_IDChanged();
    partial void OnContentIdChanging(System.Nullable<int> value);
    partial void OnContentIdChanged();
    partial void OnVersionOf_IDChanging(System.Nullable<int> value);
    partial void OnVersionOf_IDChanged();
    partial void OnCulture_IDChanging(System.Nullable<int> value);
    partial void OnCulture_IDChanged();
    partial void OnTitleFormat_IDChanging(System.Nullable<int> value);
    partial void OnTitleFormat_IDChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnIsInSiteMapChanging(System.Nullable<bool> value);
    partial void OnIsInSiteMapChanged();
    partial void OnIndexOrderChanging(System.Nullable<int> value);
    partial void OnIndexOrderChanged();
    partial void OnExtensionIdChanging(System.Nullable<int> value);
    partial void OnExtensionIdChanged();
    partial void OnAuthenticationTargetingChanging(string value);
    partial void OnAuthenticationTargetingChanged();
    partial void OnTargetingChanging(string value);
    partial void OnTargetingChanged();
    #endregion
		
		public QPAbstractItem()
		{
			this._Parent1 = default(EntityRef<QPAbstractItem>);
			this._Discriminator1 = default(EntityRef<QPDiscriminator>);
			this._VersionOf1 = default(EntityRef<QPAbstractItem>);
			this._Culture1 = default(EntityRef<QPCulture>);
			this._TitleFormat1 = default(EntityRef<ItemTitleFormat>);
			this._AbstractItemAbtractItemRegionArticles = new EntitySet<AbstractItemAbtractItemRegionArticle>(new Action<AbstractItemAbtractItemRegionArticle>(this.attach_AbstractItemAbtractItemRegionArticles), new Action<AbstractItemAbtractItemRegionArticle>(this.detach_AbstractItemAbtractItemRegionArticles));
			this._Children = new EntitySet<QPAbstractItem>(new Action<QPAbstractItem>(this.attach_Children), new Action<QPAbstractItem>(this.detach_Children));
			this._Versions = new EntitySet<QPAbstractItem>(new Action<QPAbstractItem>(this.attach_Versions), new Action<QPAbstractItem>(this.detach_Versions));
			this._ObsoleteUrls = new EntitySet<QPObsoleteUrl>(new Action<QPObsoleteUrl>(this.attach_ObsoleteUrls), new Action<QPObsoleteUrl>(this.detach_ObsoleteUrls));
			this._StatusType = default(EntityRef<StatusType>);
			OnCreated();
		}
		
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public int StatusTypeId
		{
			get
			{
				return this._StatusTypeId;
			}
			set
			{
				if ((this._StatusTypeId != value))
				{
					this.OnStatusTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StatusTypeId = value;
					this.SendPropertyChanged("StatusTypeId");
					this.OnStatusTypeIdChanged();
				}
			}
		}
		
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		public bool Archive
		{
			get
			{
				return this._Archive;
			}
			set
			{
				if ((this._Archive != value))
				{
					this.OnArchiveChanging(value);
					this.SendPropertyChanging();
					this._Archive = value;
					this.SendPropertyChanged("Archive");
					this.OnArchiveChanged();
				}
			}
		}
		
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public System.Nullable<int> Parent_ID
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this.OnParent_IDChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent_ID");
					this.OnParent_IDChanged();
				}
			}
		}
		
		public System.Nullable<bool> IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		public System.Nullable<bool> IsPage
		{
			get
			{
				return this._IsPage;
			}
			set
			{
				if ((this._IsPage != value))
				{
					this.OnIsPageChanging(value);
					this.SendPropertyChanging();
					this._IsPage = value;
					this.SendPropertyChanged("IsPage");
					this.OnIsPageChanged();
				}
			}
		}
		
		public string ZoneName
		{
			get
			{
				return this._ZoneName;
			}
			set
			{
				if ((this._ZoneName != value))
				{
					this.OnZoneNameChanging(value);
					this.SendPropertyChanging();
					this._ZoneName = value;
					this.SendPropertyChanged("ZoneName");
					this.OnZoneNameChanged();
				}
			}
		}
		
		public string AllowedUrlPatterns
		{
			get
			{
				return this._AllowedUrlPatterns;
			}
			set
			{
				if ((this._AllowedUrlPatterns != value))
				{
					this.OnAllowedUrlPatternsChanging(value);
					this.SendPropertyChanging();
					this._AllowedUrlPatterns = value;
					this.SendPropertyChanged("AllowedUrlPatterns");
					this.OnAllowedUrlPatternsChanged();
				}
			}
		}
		
		public string DeniedUrlPatterns
		{
			get
			{
				return this._DeniedUrlPatterns;
			}
			set
			{
				if ((this._DeniedUrlPatterns != value))
				{
					this.OnDeniedUrlPatternsChanging(value);
					this.SendPropertyChanging();
					this._DeniedUrlPatterns = value;
					this.SendPropertyChanged("DeniedUrlPatterns");
					this.OnDeniedUrlPatternsChanged();
				}
			}
		}
		
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public System.Nullable<int> Discriminator_ID
		{
			get
			{
				return this._Discriminator;
			}
			set
			{
				if ((this._Discriminator != value))
				{
					this.OnDiscriminator_IDChanging(value);
					this.SendPropertyChanging();
					this._Discriminator = value;
					this.SendPropertyChanged("Discriminator_ID");
					this.OnDiscriminator_IDChanged();
				}
			}
		}
		
		public System.Nullable<int> ContentId
		{
			get
			{
				return this._ContentId;
			}
			set
			{
				if ((this._ContentId != value))
				{
					this.OnContentIdChanging(value);
					this.SendPropertyChanging();
					this._ContentId = value;
					this.SendPropertyChanged("ContentId");
					this.OnContentIdChanged();
				}
			}
		}
		
		public System.Nullable<int> VersionOf_ID
		{
			get
			{
				return this._VersionOf;
			}
			set
			{
				if ((this._VersionOf != value))
				{
					this.OnVersionOf_IDChanging(value);
					this.SendPropertyChanging();
					this._VersionOf = value;
					this.SendPropertyChanged("VersionOf_ID");
					this.OnVersionOf_IDChanged();
				}
			}
		}
		
		public System.Nullable<int> Culture_ID
		{
			get
			{
				return this._Culture;
			}
			set
			{
				if ((this._Culture != value))
				{
					this.OnCulture_IDChanging(value);
					this.SendPropertyChanging();
					this._Culture = value;
					this.SendPropertyChanged("Culture_ID");
					this.OnCulture_IDChanged();
				}
			}
		}
		
		public System.Nullable<int> TitleFormat_ID
		{
			get
			{
				return this._TitleFormat;
			}
			set
			{
				if ((this._TitleFormat != value))
				{
					this.OnTitleFormat_IDChanging(value);
					this.SendPropertyChanging();
					this._TitleFormat = value;
					this.SendPropertyChanged("TitleFormat_ID");
					this.OnTitleFormat_IDChanged();
				}
			}
		}
		
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		public string MetaDescription
		{
			get
			{
				return this._MetaDescription;
			}
			set
			{
				if ((this._MetaDescription != value))
				{
					this.OnMetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetaDescription = value;
					this.SendPropertyChanged("MetaDescription");
					this.OnMetaDescriptionChanged();
				}
			}
		}
		
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		public System.Nullable<bool> IsInSiteMap
		{
			get
			{
				return this._IsInSiteMap;
			}
			set
			{
				if ((this._IsInSiteMap != value))
				{
					this.OnIsInSiteMapChanging(value);
					this.SendPropertyChanging();
					this._IsInSiteMap = value;
					this.SendPropertyChanged("IsInSiteMap");
					this.OnIsInSiteMapChanged();
				}
			}
		}
		
		public System.Nullable<int> IndexOrder
		{
			get
			{
				return this._IndexOrder;
			}
			set
			{
				if ((this._IndexOrder != value))
				{
					this.OnIndexOrderChanging(value);
					this.SendPropertyChanging();
					this._IndexOrder = value;
					this.SendPropertyChanged("IndexOrder");
					this.OnIndexOrderChanged();
				}
			}
		}
		
		public System.Nullable<int> ExtensionId
		{
			get
			{
				return this._ExtensionId;
			}
			set
			{
				if ((this._ExtensionId != value))
				{
					this.OnExtensionIdChanging(value);
					this.SendPropertyChanging();
					this._ExtensionId = value;
					this.SendPropertyChanged("ExtensionId");
					this.OnExtensionIdChanged();
				}
			}
		}
		
		public string AuthenticationTargeting
		{
			get
			{
				return this._AuthenticationTargeting;
			}
			set
			{
				if ((this._AuthenticationTargeting != value))
				{
					this.OnAuthenticationTargetingChanging(value);
					this.SendPropertyChanging();
					this._AuthenticationTargeting = value;
					this.SendPropertyChanged("AuthenticationTargeting");
					this.OnAuthenticationTargetingChanged();
				}
			}
		}

		public string Targeting
		{
			get
			{
				return this._Targeting;
			}
			set
			{
				if ((this._Targeting != value))
				{
					this.OnTargetingChanging(value);
					this.SendPropertyChanging();
					this._Targeting = value;
					this.SendPropertyChanged("Targeting");
					this.OnTargetingChanged();
				}
			}
		}

		public QPAbstractItem Parent
		{
			get
			{
				return this._Parent1.Entity;
			}
			set
			{
				QPAbstractItem previousValue = this._Parent1.Entity;
				if (((previousValue != value) 
							|| (this._Parent1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Parent1.Entity = null;
						previousValue.Children.Remove(this);
					}
					this._Parent1.Entity = value;
					if ((value != null))
					{
						value.Children.Add(this);
						this._Parent = value.Id;
					}
					else
					{
						this._Parent = default(Nullable<int>);
					}
					this.SendPropertyChanged("Parent");
				}
			}
		}
		
		public QPDiscriminator Discriminator
		{
			get
			{
				return this._Discriminator1.Entity;
			}
			set
			{
				QPDiscriminator previousValue = this._Discriminator1.Entity;
				if (((previousValue != value) 
							|| (this._Discriminator1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discriminator1.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Discriminator1.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._Discriminator = value.Id;
					}
					else
					{
						this._Discriminator = default(Nullable<int>);
					}
					this.SendPropertyChanged("Discriminator");
				}
			}
		}
		
		public QPAbstractItem VersionOf
		{
			get
			{
				return this._VersionOf1.Entity;
			}
			set
			{
				QPAbstractItem previousValue = this._VersionOf1.Entity;
				if (((previousValue != value) 
							|| (this._VersionOf1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VersionOf1.Entity = null;
						previousValue.Versions.Remove(this);
					}
					this._VersionOf1.Entity = value;
					if ((value != null))
					{
						value.Versions.Add(this);
						this._VersionOf = value.Id;
					}
					else
					{
						this._VersionOf = default(Nullable<int>);
					}
					this.SendPropertyChanged("VersionOf");
				}
			}
		}
		
		public QPCulture Culture
		{
			get
			{
				return this._Culture1.Entity;
			}
			set
			{
				QPCulture previousValue = this._Culture1.Entity;
				if (((previousValue != value) 
							|| (this._Culture1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Culture1.Entity = null;
						previousValue.AbstractItems.Remove(this);
					}
					this._Culture1.Entity = value;
					if ((value != null))
					{
						value.AbstractItems.Add(this);
						this._Culture = value.Id;
					}
					else
					{
						this._Culture = default(Nullable<int>);
					}
					this.SendPropertyChanged("Culture");
				}
			}
		}
		
		public ItemTitleFormat TitleFormat
		{
			get
			{
				return this._TitleFormat1.Entity;
			}
			set
			{
				ItemTitleFormat previousValue = this._TitleFormat1.Entity;
				if (((previousValue != value) 
							|| (this._TitleFormat1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TitleFormat1.Entity = null;
						previousValue.Item.Remove(this);
					}
					this._TitleFormat1.Entity = value;
					if ((value != null))
					{
						value.Item.Add(this);
						this._TitleFormat = value.Id;
					}
					else
					{
						this._TitleFormat = default(Nullable<int>);
					}
					this.SendPropertyChanged("TitleFormat");
				}
			}
		}
		
		public EntitySet<AbstractItemAbtractItemRegionArticle> AbstractItemAbtractItemRegionArticles
		{
			get
			{
				return this._AbstractItemAbtractItemRegionArticles;
			}
			set
			{
				this._AbstractItemAbtractItemRegionArticles.Assign(value);
			}
		}
		
		public EntitySet<QPAbstractItem> Children
		{
			get
			{
				return this._Children;
			}
			set
			{
				this._Children.Assign(value);
			}
		}
		
		public EntitySet<QPAbstractItem> Versions
		{
			get
			{
				return this._Versions;
			}
			set
			{
				this._Versions.Assign(value);
			}
		}
		
		public EntitySet<QPObsoleteUrl> ObsoleteUrls
		{
			get
			{
				return this._ObsoleteUrls;
			}
			set
			{
				this._ObsoleteUrls.Assign(value);
			}
		}
		
		public StatusType StatusType
		{
			get
			{
				return this._StatusType.Entity;
			}
			set
			{
				if ((this._StatusType.Entity != value))
				{
					this.SendPropertyChanging();
					this._StatusType.Entity = value;
					this.SendPropertyChanged("StatusType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AbstractItemAbtractItemRegionArticles(AbstractItemAbtractItemRegionArticle entity)
		{
			this.SendPropertyChanging();
			entity.QPAbstractItem = this;
		}
		
		private void detach_AbstractItemAbtractItemRegionArticles(AbstractItemAbtractItemRegionArticle entity)
		{
			this.SendPropertyChanging();
			entity.QPAbstractItem = null;
		}
		
		private void attach_Children(QPAbstractItem entity)
		{
			this.SendPropertyChanging();
			entity.Parent = this;
		}
		
		private void detach_Children(QPAbstractItem entity)
		{
			this.SendPropertyChanging();
			entity.Parent = null;
		}
		
		private void attach_Versions(QPAbstractItem entity)
		{
			this.SendPropertyChanging();
			entity.VersionOf = this;
		}
		
		private void detach_Versions(QPAbstractItem entity)
		{
			this.SendPropertyChanging();
			entity.VersionOf = null;
		}
		
		private void attach_ObsoleteUrls(QPObsoleteUrl entity)
		{
			this.SendPropertyChanging();
			entity.AbstractItem = this;
		}
		
		private void detach_ObsoleteUrls(QPObsoleteUrl entity)
		{
			this.SendPropertyChanging();
			entity.AbstractItem = null;
		}
	}
	
	public partial class QPDiscriminator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StatusTypeId;
		
		private bool _Visible;
		
		private bool _Archive;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _LastModifiedBy;
		
		private string _Title;
		
		private string _Name;
		
		private System.Nullable<int> _PreferredContentId;
		
		private string _CategoryName;
		
		private string _Description;
		
		private string _IconUrl;
		
		private System.Nullable<bool> _IsPage;
		
		private string _AllowedZones;
		
		private System.Nullable<bool> _FilterPartByUrl;
		
		private EntitySet<QPItemDefinitionConstraint> _AllowedItemDefinitions;
		
		private EntitySet<ItemDefinitionItemDefinitionArticle> _ItemDefinitionItemDefinitionArticles;
		
		private EntitySet<QPAbstractItem> _Items;
		
		private EntitySet<QPItemDefinitionConstraint> _AllowDefinition;
		
		private EntityRef<StatusType> _StatusType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusTypeIdChanging(int value);
    partial void OnStatusTypeIdChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnArchiveChanging(bool value);
    partial void OnArchiveChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPreferredContentIdChanging(System.Nullable<int> value);
    partial void OnPreferredContentIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnIconUrlChanging(string value);
    partial void OnIconUrlChanged();
    partial void OnIsPageChanging(System.Nullable<bool> value);
    partial void OnIsPageChanged();
    partial void OnAllowedZonesChanging(string value);
    partial void OnAllowedZonesChanged();
    partial void OnFilterPartByUrlChanging(System.Nullable<bool> value);
    partial void OnFilterPartByUrlChanged();
    #endregion
		
		public QPDiscriminator()
		{
			this._AllowedItemDefinitions = new EntitySet<QPItemDefinitionConstraint>(new Action<QPItemDefinitionConstraint>(this.attach_AllowedItemDefinitions), new Action<QPItemDefinitionConstraint>(this.detach_AllowedItemDefinitions));
			this._ItemDefinitionItemDefinitionArticles = new EntitySet<ItemDefinitionItemDefinitionArticle>(new Action<ItemDefinitionItemDefinitionArticle>(this.attach_ItemDefinitionItemDefinitionArticles), new Action<ItemDefinitionItemDefinitionArticle>(this.detach_ItemDefinitionItemDefinitionArticles));
			this._Items = new EntitySet<QPAbstractItem>(new Action<QPAbstractItem>(this.attach_Items), new Action<QPAbstractItem>(this.detach_Items));
			this._AllowDefinition = new EntitySet<QPItemDefinitionConstraint>(new Action<QPItemDefinitionConstraint>(this.attach_AllowDefinition), new Action<QPItemDefinitionConstraint>(this.detach_AllowDefinition));
			this._StatusType = default(EntityRef<StatusType>);
			OnCreated();
		}
		
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public int StatusTypeId
		{
			get
			{
				return this._StatusTypeId;
			}
			set
			{
				if ((this._StatusTypeId != value))
				{
					this.OnStatusTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StatusTypeId = value;
					this.SendPropertyChanged("StatusTypeId");
					this.OnStatusTypeIdChanged();
				}
			}
		}
		
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		public bool Archive
		{
			get
			{
				return this._Archive;
			}
			set
			{
				if ((this._Archive != value))
				{
					this.OnArchiveChanging(value);
					this.SendPropertyChanging();
					this._Archive = value;
					this.SendPropertyChanged("Archive");
					this.OnArchiveChanged();
				}
			}
		}
		
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public System.Nullable<int> PreferredContentId
		{
			get
			{
				return this._PreferredContentId;
			}
			set
			{
				if ((this._PreferredContentId != value))
				{
					this.OnPreferredContentIdChanging(value);
					this.SendPropertyChanging();
					this._PreferredContentId = value;
					this.SendPropertyChanged("PreferredContentId");
					this.OnPreferredContentIdChanged();
				}
			}
		}
		
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public string IconUrl
		{
			get
			{
				return this._IconUrl;
			}
			set
			{
				if ((this._IconUrl != value))
				{
					this.OnIconUrlChanging(value);
					this.SendPropertyChanging();
					this._IconUrl = value;
					this.SendPropertyChanged("IconUrl");
					this.OnIconUrlChanged();
				}
			}
		}
		
		public System.Nullable<bool> IsPage
		{
			get
			{
				return this._IsPage;
			}
			set
			{
				if ((this._IsPage != value))
				{
					this.OnIsPageChanging(value);
					this.SendPropertyChanging();
					this._IsPage = value;
					this.SendPropertyChanged("IsPage");
					this.OnIsPageChanged();
				}
			}
		}
		
		public string AllowedZones
		{
			get
			{
				return this._AllowedZones;
			}
			set
			{
				if ((this._AllowedZones != value))
				{
					this.OnAllowedZonesChanging(value);
					this.SendPropertyChanging();
					this._AllowedZones = value;
					this.SendPropertyChanged("AllowedZones");
					this.OnAllowedZonesChanged();
				}
			}
		}
		
		public System.Nullable<bool> FilterPartByUrl
		{
			get
			{
				return this._FilterPartByUrl;
			}
			set
			{
				if ((this._FilterPartByUrl != value))
				{
					this.OnFilterPartByUrlChanging(value);
					this.SendPropertyChanging();
					this._FilterPartByUrl = value;
					this.SendPropertyChanged("FilterPartByUrl");
					this.OnFilterPartByUrlChanged();
				}
			}
		}
		
		public EntitySet<QPItemDefinitionConstraint> AllowedItemDefinitions
		{
			get
			{
				return this._AllowedItemDefinitions;
			}
			set
			{
				this._AllowedItemDefinitions.Assign(value);
			}
		}
		
		public EntitySet<ItemDefinitionItemDefinitionArticle> ItemDefinitionItemDefinitionArticles
		{
			get
			{
				return this._ItemDefinitionItemDefinitionArticles;
			}
			set
			{
				this._ItemDefinitionItemDefinitionArticles.Assign(value);
			}
		}
		
		public EntitySet<QPAbstractItem> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public EntitySet<QPItemDefinitionConstraint> AllowDefinition
		{
			get
			{
				return this._AllowDefinition;
			}
			set
			{
				this._AllowDefinition.Assign(value);
			}
		}
		
		public StatusType StatusType
		{
			get
			{
				return this._StatusType.Entity;
			}
			set
			{
				if ((this._StatusType.Entity != value))
				{
					this.SendPropertyChanging();
					this._StatusType.Entity = value;
					this.SendPropertyChanged("StatusType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllowedItemDefinitions(QPItemDefinitionConstraint entity)
		{
			this.SendPropertyChanging();
			entity.Source = this;
		}
		
		private void detach_AllowedItemDefinitions(QPItemDefinitionConstraint entity)
		{
			this.SendPropertyChanging();
			entity.Source = null;
		}
		
		private void attach_ItemDefinitionItemDefinitionArticles(ItemDefinitionItemDefinitionArticle entity)
		{
			this.SendPropertyChanging();
			entity.QPDiscriminator = this;
		}
		
		private void detach_ItemDefinitionItemDefinitionArticles(ItemDefinitionItemDefinitionArticle entity)
		{
			this.SendPropertyChanging();
			entity.QPDiscriminator = null;
		}
		
		private void attach_Items(QPAbstractItem entity)
		{
			this.SendPropertyChanging();
			entity.Discriminator = this;
		}
		
		private void detach_Items(QPAbstractItem entity)
		{
			this.SendPropertyChanging();
			entity.Discriminator = null;
		}
		
		private void attach_AllowDefinition(QPItemDefinitionConstraint entity)
		{
			this.SendPropertyChanging();
			entity.Target = this;
		}
		
		private void detach_AllowDefinition(QPItemDefinitionConstraint entity)
		{
			this.SendPropertyChanging();
			entity.Target = null;
		}
	}
	
	public partial class QPCulture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StatusTypeId;
		
		private bool _Visible;
		
		private bool _Archive;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _LastModifiedBy;
		
		private string _Title;
		
		private string _Name;
		
		private string _Icon;
		
		private EntitySet<QPAbstractItem> _AbstractItems;
		
		private EntityRef<StatusType> _StatusType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusTypeIdChanging(int value);
    partial void OnStatusTypeIdChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnArchiveChanging(bool value);
    partial void OnArchiveChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    #endregion
		
		public QPCulture()
		{
			this._AbstractItems = new EntitySet<QPAbstractItem>(new Action<QPAbstractItem>(this.attach_AbstractItems), new Action<QPAbstractItem>(this.detach_AbstractItems));
			this._StatusType = default(EntityRef<StatusType>);
			OnCreated();
		}
		
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public int StatusTypeId
		{
			get
			{
				return this._StatusTypeId;
			}
			set
			{
				if ((this._StatusTypeId != value))
				{
					this.OnStatusTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StatusTypeId = value;
					this.SendPropertyChanged("StatusTypeId");
					this.OnStatusTypeIdChanged();
				}
			}
		}
		
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		public bool Archive
		{
			get
			{
				return this._Archive;
			}
			set
			{
				if ((this._Archive != value))
				{
					this.OnArchiveChanging(value);
					this.SendPropertyChanging();
					this._Archive = value;
					this.SendPropertyChanged("Archive");
					this.OnArchiveChanged();
				}
			}
		}
		
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public string Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		public EntitySet<QPAbstractItem> AbstractItems
		{
			get
			{
				return this._AbstractItems;
			}
			set
			{
				this._AbstractItems.Assign(value);
			}
		}
		
		public StatusType StatusType
		{
			get
			{
				return this._StatusType.Entity;
			}
			set
			{
				if ((this._StatusType.Entity != value))
				{
					this.SendPropertyChanging();
					this._StatusType.Entity = value;
					this.SendPropertyChanged("StatusType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AbstractItems(QPAbstractItem entity)
		{
			this.SendPropertyChanging();
			entity.Culture = this;
		}
		
		private void detach_AbstractItems(QPAbstractItem entity)
		{
			this.SendPropertyChanging();
			entity.Culture = null;
		}
	}
	
	public partial class ItemTitleFormat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StatusTypeId;
		
		private bool _Visible;
		
		private bool _Archive;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _LastModifiedBy;
		
		private string _Value;
		
		private string _Description;
		
		private EntitySet<QPAbstractItem> _Item;
		
		private EntityRef<StatusType> _StatusType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusTypeIdChanging(int value);
    partial void OnStatusTypeIdChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnArchiveChanging(bool value);
    partial void OnArchiveChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ItemTitleFormat()
		{
			this._Item = new EntitySet<QPAbstractItem>(new Action<QPAbstractItem>(this.attach_Item), new Action<QPAbstractItem>(this.detach_Item));
			this._StatusType = default(EntityRef<StatusType>);
			OnCreated();
		}
		
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public int StatusTypeId
		{
			get
			{
				return this._StatusTypeId;
			}
			set
			{
				if ((this._StatusTypeId != value))
				{
					this.OnStatusTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StatusTypeId = value;
					this.SendPropertyChanged("StatusTypeId");
					this.OnStatusTypeIdChanged();
				}
			}
		}
		
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		public bool Archive
		{
			get
			{
				return this._Archive;
			}
			set
			{
				if ((this._Archive != value))
				{
					this.OnArchiveChanging(value);
					this.SendPropertyChanging();
					this._Archive = value;
					this.SendPropertyChanged("Archive");
					this.OnArchiveChanged();
				}
			}
		}
		
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public EntitySet<QPAbstractItem> Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				this._Item.Assign(value);
			}
		}
		
		public StatusType StatusType
		{
			get
			{
				return this._StatusType.Entity;
			}
			set
			{
				if ((this._StatusType.Entity != value))
				{
					this.SendPropertyChanging();
					this._StatusType.Entity = value;
					this.SendPropertyChanged("StatusType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Item(QPAbstractItem entity)
		{
			this.SendPropertyChanging();
			entity.TitleFormat = this;
		}
		
		private void detach_Item(QPAbstractItem entity)
		{
			this.SendPropertyChanging();
			entity.TitleFormat = null;
		}
	}
	
	public partial class QPRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StatusTypeId;
		
		private bool _Visible;
		
		private bool _Archive;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _LastModifiedBy;
		
		private string _Title;
		
		private System.Nullable<double> _ParentId;
		
		private string _Alias;
		
		private EntityRef<StatusType> _StatusType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusTypeIdChanging(int value);
    partial void OnStatusTypeIdChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnArchiveChanging(bool value);
    partial void OnArchiveChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnParentIdChanging(System.Nullable<double> value);
    partial void OnParentIdChanged();
    partial void OnAliasChanging(string value);
    partial void OnAliasChanged();
    #endregion
		
		public QPRegion()
		{
			this._StatusType = default(EntityRef<StatusType>);
			OnCreated();
		}
		
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public int StatusTypeId
		{
			get
			{
				return this._StatusTypeId;
			}
			set
			{
				if ((this._StatusTypeId != value))
				{
					this.OnStatusTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StatusTypeId = value;
					this.SendPropertyChanged("StatusTypeId");
					this.OnStatusTypeIdChanged();
				}
			}
		}
		
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		public bool Archive
		{
			get
			{
				return this._Archive;
			}
			set
			{
				if ((this._Archive != value))
				{
					this.OnArchiveChanging(value);
					this.SendPropertyChanging();
					this._Archive = value;
					this.SendPropertyChanged("Archive");
					this.OnArchiveChanged();
				}
			}
		}
		
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		public System.Nullable<double> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		public string Alias
		{
			get
			{
				return this._Alias;
			}
			set
			{
				if ((this._Alias != value))
				{
					this.OnAliasChanging(value);
					this.SendPropertyChanging();
					this._Alias = value;
					this.SendPropertyChanged("Alias");
					this.OnAliasChanged();
				}
			}
		}
		
		public StatusType StatusType
		{
			get
			{
				return this._StatusType.Entity;
			}
			set
			{
				if ((this._StatusType.Entity != value))
				{
					this.SendPropertyChanging();
					this._StatusType.Entity = value;
					this.SendPropertyChanged("StatusType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class TrailedAbstractItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StatusTypeId;
		
		private bool _Visible;
		
		private bool _Archive;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _LastModifiedBy;
		
		private string _Trail;
		
		private string _Title;
		
		private string _Name;
		
		private EntityRef<StatusType> _StatusType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusTypeIdChanging(int value);
    partial void OnStatusTypeIdChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnArchiveChanging(bool value);
    partial void OnArchiveChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnTrailChanging(string value);
    partial void OnTrailChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public TrailedAbstractItem()
		{
			this._StatusType = default(EntityRef<StatusType>);
			OnCreated();
		}
		
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public int StatusTypeId
		{
			get
			{
				return this._StatusTypeId;
			}
			set
			{
				if ((this._StatusTypeId != value))
				{
					this.OnStatusTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StatusTypeId = value;
					this.SendPropertyChanged("StatusTypeId");
					this.OnStatusTypeIdChanged();
				}
			}
		}
		
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		public bool Archive
		{
			get
			{
				return this._Archive;
			}
			set
			{
				if ((this._Archive != value))
				{
					this.OnArchiveChanging(value);
					this.SendPropertyChanging();
					this._Archive = value;
					this.SendPropertyChanged("Archive");
					this.OnArchiveChanged();
				}
			}
		}
		
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		public string Trail
		{
			get
			{
				return this._Trail;
			}
			set
			{
				if ((this._Trail != value))
				{
					this.OnTrailChanging(value);
					this.SendPropertyChanging();
					this._Trail = value;
					this.SendPropertyChanged("Trail");
					this.OnTrailChanged();
				}
			}
		}
		
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public StatusType StatusType
		{
			get
			{
				return this._StatusType.Entity;
			}
			set
			{
				if ((this._StatusType.Entity != value))
				{
					this.SendPropertyChanging();
					this._StatusType.Entity = value;
					this.SendPropertyChanged("StatusType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class QPObsoleteUrl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StatusTypeId;
		
		private bool _Visible;
		
		private bool _Archive;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _LastModifiedBy;
		
		private string _Url;
		
		private System.Nullable<int> _AbstractItem;
		
		private EntityRef<QPAbstractItem> _AbstractItem1;
		
		private EntityRef<StatusType> _StatusType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusTypeIdChanging(int value);
    partial void OnStatusTypeIdChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnArchiveChanging(bool value);
    partial void OnArchiveChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnAbstractItem_IDChanging(System.Nullable<int> value);
    partial void OnAbstractItem_IDChanged();
    #endregion
		
		public QPObsoleteUrl()
		{
			this._AbstractItem1 = default(EntityRef<QPAbstractItem>);
			this._StatusType = default(EntityRef<StatusType>);
			OnCreated();
		}
		
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public int StatusTypeId
		{
			get
			{
				return this._StatusTypeId;
			}
			set
			{
				if ((this._StatusTypeId != value))
				{
					this.OnStatusTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StatusTypeId = value;
					this.SendPropertyChanged("StatusTypeId");
					this.OnStatusTypeIdChanged();
				}
			}
		}
		
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		public bool Archive
		{
			get
			{
				return this._Archive;
			}
			set
			{
				if ((this._Archive != value))
				{
					this.OnArchiveChanging(value);
					this.SendPropertyChanging();
					this._Archive = value;
					this.SendPropertyChanged("Archive");
					this.OnArchiveChanged();
				}
			}
		}
		
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		public System.Nullable<int> AbstractItem_ID
		{
			get
			{
				return this._AbstractItem;
			}
			set
			{
				if ((this._AbstractItem != value))
				{
					this.OnAbstractItem_IDChanging(value);
					this.SendPropertyChanging();
					this._AbstractItem = value;
					this.SendPropertyChanged("AbstractItem_ID");
					this.OnAbstractItem_IDChanged();
				}
			}
		}
		
		public QPAbstractItem AbstractItem
		{
			get
			{
				return this._AbstractItem1.Entity;
			}
			set
			{
				QPAbstractItem previousValue = this._AbstractItem1.Entity;
				if (((previousValue != value) 
							|| (this._AbstractItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AbstractItem1.Entity = null;
						previousValue.ObsoleteUrls.Remove(this);
					}
					this._AbstractItem1.Entity = value;
					if ((value != null))
					{
						value.ObsoleteUrls.Add(this);
						this._AbstractItem = value.Id;
					}
					else
					{
						this._AbstractItem = default(Nullable<int>);
					}
					this.SendPropertyChanged("AbstractItem");
				}
			}
		}
		
		public StatusType StatusType
		{
			get
			{
				return this._StatusType.Entity;
			}
			set
			{
				if ((this._StatusType.Entity != value))
				{
					this.SendPropertyChanging();
					this._StatusType.Entity = value;
					this.SendPropertyChanged("StatusType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class QPItemDefinitionConstraint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _StatusTypeId;
		
		private bool _Visible;
		
		private bool _Archive;
		
		private System.DateTime _Created;
		
		private System.DateTime _Modified;
		
		private int _LastModifiedBy;
		
		private System.Nullable<int> _Source;
		
		private System.Nullable<int> _Target;
		
		private string _Title;
		
		private EntityRef<QPDiscriminator> _Source1;
		
		private EntityRef<QPDiscriminator> _Target1;
		
		private EntityRef<StatusType> _StatusType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusTypeIdChanging(int value);
    partial void OnStatusTypeIdChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnArchiveChanging(bool value);
    partial void OnArchiveChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.DateTime value);
    partial void OnModifiedChanged();
    partial void OnLastModifiedByChanging(int value);
    partial void OnLastModifiedByChanged();
    partial void OnSource_IDChanging(System.Nullable<int> value);
    partial void OnSource_IDChanged();
    partial void OnTarget_IDChanging(System.Nullable<int> value);
    partial void OnTarget_IDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public QPItemDefinitionConstraint()
		{
			this._Source1 = default(EntityRef<QPDiscriminator>);
			this._Target1 = default(EntityRef<QPDiscriminator>);
			this._StatusType = default(EntityRef<StatusType>);
			OnCreated();
		}
		
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public int StatusTypeId
		{
			get
			{
				return this._StatusTypeId;
			}
			set
			{
				if ((this._StatusTypeId != value))
				{
					this.OnStatusTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StatusTypeId = value;
					this.SendPropertyChanged("StatusTypeId");
					this.OnStatusTypeIdChanged();
				}
			}
		}
		
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		public bool Archive
		{
			get
			{
				return this._Archive;
			}
			set
			{
				if ((this._Archive != value))
				{
					this.OnArchiveChanging(value);
					this.SendPropertyChanging();
					this._Archive = value;
					this.SendPropertyChanged("Archive");
					this.OnArchiveChanged();
				}
			}
		}
		
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		public System.DateTime Modified
		{
			get
			{
				return this._Modified;
			}
			set
			{
				if ((this._Modified != value))
				{
					this.OnModifiedChanging(value);
					this.SendPropertyChanging();
					this._Modified = value;
					this.SendPropertyChanged("Modified");
					this.OnModifiedChanged();
				}
			}
		}
		
		public int LastModifiedBy
		{
			get
			{
				return this._LastModifiedBy;
			}
			set
			{
				if ((this._LastModifiedBy != value))
				{
					this.OnLastModifiedByChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedBy = value;
					this.SendPropertyChanged("LastModifiedBy");
					this.OnLastModifiedByChanged();
				}
			}
		}
		
		public System.Nullable<int> Source_ID
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSource_IDChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source_ID");
					this.OnSource_IDChanged();
				}
			}
		}
		
		public System.Nullable<int> Target_ID
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTarget_IDChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target_ID");
					this.OnTarget_IDChanged();
				}
			}
		}
		
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		public QPDiscriminator Source
		{
			get
			{
				return this._Source1.Entity;
			}
			set
			{
				QPDiscriminator previousValue = this._Source1.Entity;
				if (((previousValue != value) 
							|| (this._Source1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Source1.Entity = null;
						previousValue.AllowedItemDefinitions.Remove(this);
					}
					this._Source1.Entity = value;
					if ((value != null))
					{
						value.AllowedItemDefinitions.Add(this);
						this._Source = value.Id;
					}
					else
					{
						this._Source = default(Nullable<int>);
					}
					this.SendPropertyChanged("Source");
				}
			}
		}
		
		public QPDiscriminator Target
		{
			get
			{
				return this._Target1.Entity;
			}
			set
			{
				QPDiscriminator previousValue = this._Target1.Entity;
				if (((previousValue != value) 
							|| (this._Target1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Target1.Entity = null;
						previousValue.AllowDefinition.Remove(this);
					}
					this._Target1.Entity = value;
					if ((value != null))
					{
						value.AllowDefinition.Add(this);
						this._Target = value.Id;
					}
					else
					{
						this._Target = default(Nullable<int>);
					}
					this.SendPropertyChanged("Target");
				}
			}
		}
		
		public StatusType StatusType
		{
			get
			{
				return this._StatusType.Entity;
			}
			set
			{
				if ((this._StatusType.Entity != value))
				{
					this.SendPropertyChanging();
					this._StatusType.Entity = value;
					this.SendPropertyChanged("StatusType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class AbstractItemAbtractItemRegionArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ITEM_ID;
		
		private int _LINKED_ITEM_ID;
		
		private EntityRef<QPAbstractItem> _QPAbstractItem1;
		
		private EntityRef<QPRegion> _QPRegion1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQPAbstractItem_IDChanging(int value);
    partial void OnQPAbstractItem_IDChanged();
    partial void OnQPRegion_IDChanging(int value);
    partial void OnQPRegion_IDChanged();
    #endregion
		
		public AbstractItemAbtractItemRegionArticle()
		{
			this._QPAbstractItem1 = default(EntityRef<QPAbstractItem>);
			this._QPRegion1 = default(EntityRef<QPRegion>);
			OnCreated();
		}
		
		public int QPAbstractItem_ID
		{
			get
			{
				return this._ITEM_ID;
			}
			set
			{
				if ((this._ITEM_ID != value))
				{
					this.OnQPAbstractItem_IDChanging(value);
					this.SendPropertyChanging();
					this._ITEM_ID = value;
					this.SendPropertyChanged("QPAbstractItem_ID");
					this.OnQPAbstractItem_IDChanged();
				}
			}
		}
		
		public int QPRegion_ID
		{
			get
			{
				return this._LINKED_ITEM_ID;
			}
			set
			{
				if ((this._LINKED_ITEM_ID != value))
				{
					this.OnQPRegion_IDChanging(value);
					this.SendPropertyChanging();
					this._LINKED_ITEM_ID = value;
					this.SendPropertyChanged("QPRegion_ID");
					this.OnQPRegion_IDChanged();
				}
			}
		}
		
		public QPAbstractItem QPAbstractItem
		{
			get
			{
				return this._QPAbstractItem1.Entity;
			}
			set
			{
				QPAbstractItem previousValue = this._QPAbstractItem1.Entity;
				if (((previousValue != value) 
							|| (this._QPAbstractItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QPAbstractItem1.Entity = null;
						previousValue.AbstractItemAbtractItemRegionArticles.Remove(this);
					}
					this._QPAbstractItem1.Entity = value;
					if ((value != null))
					{
						value.AbstractItemAbtractItemRegionArticles.Add(this);
						this._ITEM_ID = value.Id;
					}
					else
					{
						this._ITEM_ID = default(int);
					}
					this.SendPropertyChanged("QPAbstractItem");
				}
			}
		}
		
		public QPRegion QPRegion
		{
			get
			{
				return this._QPRegion1.Entity;
			}
			set
			{
				if ((this._QPRegion1.Entity != value))
				{
					this.SendPropertyChanging();
					this._QPRegion1.Entity = value;
					this.SendPropertyChanged("QPRegion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class ItemDefinitionItemDefinitionArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ITEM_ID;
		
		private int _LINKED_ITEM_ID;
		
		private EntityRef<QPDiscriminator> _QPDiscriminator1;
		
		private EntityRef<QPDiscriminator> _QPDiscriminator12;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQPDiscriminator_IDChanging(int value);
    partial void OnQPDiscriminator_IDChanged();
    partial void OnQPDiscriminator_ID2Changing(int value);
    partial void OnQPDiscriminator_ID2Changed();
    #endregion
		
		public ItemDefinitionItemDefinitionArticle()
		{
			this._QPDiscriminator1 = default(EntityRef<QPDiscriminator>);
			this._QPDiscriminator12 = default(EntityRef<QPDiscriminator>);
			OnCreated();
		}
		
		public int QPDiscriminator_ID
		{
			get
			{
				return this._ITEM_ID;
			}
			set
			{
				if ((this._ITEM_ID != value))
				{
					this.OnQPDiscriminator_IDChanging(value);
					this.SendPropertyChanging();
					this._ITEM_ID = value;
					this.SendPropertyChanged("QPDiscriminator_ID");
					this.OnQPDiscriminator_IDChanged();
				}
			}
		}
		
		public int QPDiscriminator_ID2
		{
			get
			{
				return this._LINKED_ITEM_ID;
			}
			set
			{
				if ((this._LINKED_ITEM_ID != value))
				{
					this.OnQPDiscriminator_ID2Changing(value);
					this.SendPropertyChanging();
					this._LINKED_ITEM_ID = value;
					this.SendPropertyChanged("QPDiscriminator_ID2");
					this.OnQPDiscriminator_ID2Changed();
				}
			}
		}
		
		public QPDiscriminator QPDiscriminator
		{
			get
			{
				return this._QPDiscriminator1.Entity;
			}
			set
			{
				QPDiscriminator previousValue = this._QPDiscriminator1.Entity;
				if (((previousValue != value) 
							|| (this._QPDiscriminator1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QPDiscriminator1.Entity = null;
						previousValue.ItemDefinitionItemDefinitionArticles.Remove(this);
					}
					this._QPDiscriminator1.Entity = value;
					if ((value != null))
					{
						value.ItemDefinitionItemDefinitionArticles.Add(this);
						this._ITEM_ID = value.Id;
					}
					else
					{
						this._ITEM_ID = default(int);
					}
					this.SendPropertyChanged("QPDiscriminator");
				}
			}
		}
		
		public QPDiscriminator QPDiscriminator2
		{
			get
			{
				return this._QPDiscriminator12.Entity;
			}
			set
			{
				if ((this._QPDiscriminator12.Entity != value))
				{
					this.SendPropertyChanging();
					this._QPDiscriminator12.Entity = value;
					this.SendPropertyChanged("QPDiscriminator2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
